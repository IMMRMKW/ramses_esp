name: Build ESP32 Firmware

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Build (fresh sdkconfig from defaults)
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v5.4.1
        target: esp32c6
        path: .
        command: >-
          rm -f sdkconfig && export SDKCONFIG_DEFAULTS=sdkconfig.defaults &&
          idf.py set-target esp32c6 && idf.py reconfigure && idf.py build

    - name: Create firmware package
      run: |
        set -e
        mkdir -p release
        # We only want a single merged binary output; keep flash_args for merge step
        cp build/flash_args release/ 2>/dev/null || true

    - name: Build single flash image
      run: |
        set -e
        if [ ! -f build/flash_args ]; then
          echo "flash_args not found; cannot create merged image" >&2
          exit 1
        fi
        pip install --no-cache-dir esptool
        mkdir -p release
        # Run merge inside build dir so relative paths in flash_args resolve
        (
          cd build
          python -m esptool --chip esp32c6 merge-bin -o ../release/ramses_esp_esp32_c6.bin $(tr '\n' ' ' < flash_args)
        )
        # Produce checksum for integrity verification (optional)
        (sha256sum release/ramses_esp_esp32_c6.bin || shasum -a 256 release/ramses_esp_esp32_c6.bin) > release/ramses_esp_esp32_c6.bin.sha256 || true
        ls -lh release/ramses_esp_esp32_c6.bin

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: esp32c6-firmware-single
        path: release/